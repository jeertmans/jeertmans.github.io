# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]
    paths-ignore:
    - .pre-commit-config.yaml
    - .gitignore
    - .eslintrc
    - README.md
    - LICENSE.md

  # Also runs on PR
  pull_request:
    branches: [main]
    paths-ignore:
    - .pre-commit-config.yaml
    - .gitignore
    - .eslintrc
    - README.md
    - LICENSE.md

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  # Building slides
  build-slides:
    defaults:
      run:
        working-directory: ./_slides
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Setup Pages
      uses: actions/configure-pages@v2
    - name: Install Linux Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libcairo2-dev libpango1.0-dev ffmpeg freeglut3-dev
    - name: Install Python dependencies
      run: pip install -r requirements.txt
    - name: Restore cached media
      id: cache-media-restore
      uses: actions/cache/restore@v3
      with:
        path: media
        key: ${{ runner.os }}-media
    - name: Build animation and convert it into HTML slides
      run: |
        manim main.py Main
        manim-slides convert ThreeDExample docs/source/_static/three_d_example.html -ccontrols=true
    - name: Save media to cache
      id: cache-media-save
      uses: actions/cache/save@v3
      with:
        path: media
        key: ${{ steps.cache-media-restore.outputs.cache-primary-key }}

  # Build notebooks
  build-notebook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip" # caching pip dependencies
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
      - name: Convert notebooks to posts
        run: ./notebooks_to_posts.sh

  # Build resume
  build-resume:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Run exec with Jekyll and wait until running
        run: (bundle exec jekyll serve &) | grep -q "Server running"
      - name: Create PDF from resume page
        run: mkdir -p assets/pdfs && google-chrome --headless --disable-gpu --print-to-pdf=assets/pdfs/resume.pdf --print-to-pdf-no-header http://127.0.0.1:4000/resume/ && chmod o+r assets/pdfs/resume.pdf


  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Pages
      uses: actions/configure-pages@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: pip   # caching pip dependencies
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'   # Not needed with a .ruby-version file
        bundler-cache: true   # runs 'bundle install' and caches installed gems automatically
    - name: Convert notebooks to posts
      run: ./notebooks_to_posts.sh
    - name: Run exec with Jekyll and wait until running
      run: (bundle exec jekyll serve &) | grep -q "Server running"
    - name: Create PDF from resume page
      run: mkdir -p assets/pdfs && google-chrome --headless --disable-gpu --print-to-pdf=assets/pdfs/resume.pdf --print-to-pdf-no-header http://127.0.0.1:4000/resume/ && chmod o+r assets/pdfs/resume.pdf
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./
        destination: ./_site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-slides, build-notebooks, build-resume]
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
